{"version":3,"sources":["reportWebVitals.js","component/navbar.jsx","component/sidebar.jsx","component/item.jsx","component/AddNew.jsx","component/home.jsx","component/app.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","date","React","useState","Date","today","day","toLocaleDateString","weekday","getDate","month","useDate","className","style","zIndex","href","id","SideBar","state","cat","c","this","setState","x","dropTitle","Nav","activeKey","Item","Link","onClick","props","ShowAll","ShowUnDoneItems","ShowDoneItems","DropdownButton","title","list","map","item","i","length","type","push","NavDropdown","ShowCat","Component","ItemRen","done","name","isDone","Del","Fragment","getIconClasses","color","cursor","getText","AddNew","handleSubmit","e","a","preventDefault","obj","newItem","newCat","AddHandle","handleAddState","currentTarget","value","Modal","isOpen","isModalOpen","toggle","toggleModal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","onChange","placeholder","Button","Home","Add","DelAll","SelectedCat","ShowUnDone","ShowDone","App","handleAdd","console","log","handleInDone","index","indexOf","handleDelete","filter","DeleteAll","bind","path","render","lastItemId","from","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e764642.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nexport const useDate = () => {\r\n  const locale = \"en\";\r\n  const [today] = React.useState(new Date()); // Save the current date to be able to trigger an update\r\n\r\n  const day = today.toLocaleDateString(locale, { weekday: \"long\" });\r\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\r\n    month: \"long\",\r\n  })}\\n\\n`;\r\n\r\n  return {\r\n    date,\r\n  };\r\n};\r\n\r\nconst NavBar = () => {\r\n  const { date } = useDate();\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg navbar-dark bg-primary\"\r\n      style={{ zIndex: 2 }}\r\n    >\r\n      <a className=\"navbar-brand\" href=\"/Todo-App/\">\r\n        ToDo App\r\n      </a>\r\n      {/* <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button> */}\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" href=\"/Todo-App/\">\r\n              {date}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport \"react-sidebar-ui/dist/index.css\";\r\nimport { Nav, NavDropdown, DropdownButton } from \"react-bootstrap\";\r\n\r\nimport \"../css/sidebar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = { cat: [] };\r\n\r\n  newCat(c) {\r\n    //Clone\r\n    let cat = { ...this.state.cat };\r\n    //Edit\r\n    cat = cat + c;\r\n    //Set state\r\n    this.setState({ cat });\r\n  }\r\n\r\n  render() {\r\n    let x = [];\r\n    const dropTitle = (\r\n      <span>\r\n        <i className=\"fas fa-list fa-lg\"> Categories</i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Nav\r\n        className=\"col-md-2 d-none d-md-block bg-dark sidebar\"\r\n        activeKey=\"/home\"\r\n        style={{ zIndex: 1 }}\r\n      >\r\n        <div className=\"sidebar-sticky\"></div>\r\n        <br />\r\n        <Nav.Item className=\"mt-5\">\r\n          <Nav.Link className=\"nLink\" href=\"#\" onClick={this.props.ShowAll}>\r\n            <i className=\"fas fa-home mr-2\" />\r\n            Home\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className=\"nLink\"\r\n            href=\"#\"\r\n            onClick={this.props.ShowUnDoneItems}\r\n          >\r\n            <i className=\"fas fa-clipboard-list fa-lg mr-2\" />\r\n            UnDone Items\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className=\"nLink\"\r\n            href=\"#\"\r\n            onClick={this.props.ShowDoneItems}\r\n          >\r\n            <i className=\"fas fa-clipboard-check fa-lg mr-2\" />\r\n            Done Items\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        {/* <Nav.Item>\r\n          <Nav.Link className=\"nLink disabled\" href=\"#\">\r\n            <i className=\"fas fa-list fa-lg mr-2\" />\r\n            Categories\r\n          </Nav.Link>\r\n          <ul>\r\n            {this.props.list.map((item) => {\r\n              let c = 0;\r\n              //console.log(x);\r\n              for (let i = 0; i < x.length; i++) {\r\n                if (x[i] == item.type) {\r\n                  c++;\r\n                  break;\r\n                }\r\n              }\r\n              if (c == 0) {\r\n                x.push(item.type);\r\n                return (\r\n                  <Nav.Link className=\"nLink\" key={item.id}>\r\n                    <li>{item.type}</li>\r\n                  </Nav.Link>\r\n                );\r\n              } else {\r\n                //.log(\"found\" + item.type);\r\n              }\r\n            })}\r\n          </ul>\r\n        </Nav.Item> */}\r\n\r\n        <br />\r\n\r\n        <Nav.Item className=\"ml-2\">\r\n          <DropdownButton title={dropTitle} id=\"collasible-nav-dropdown\">\r\n            {this.props.list.map((item) => {\r\n              let c = 0;\r\n              //console.log(x);\r\n              for (let i = 0; i < x.length; i++) {\r\n                if (x[i] === item.type) {\r\n                  c++;\r\n                  break;\r\n                }\r\n              }\r\n              if (c === 0) {\r\n                x.push(item.type);\r\n                return (\r\n                  <NavDropdown.Item\r\n                    key={item.id}\r\n                    onClick={() => this.props.ShowCat(item.type)}\r\n                  >\r\n                    {\" \"}\r\n                    {item.type}{\" \"}\r\n                  </NavDropdown.Item>\r\n                );\r\n              } else {\r\n                //console.log(\"found\" + item.type);\r\n\r\n                return;\r\n              }\r\n            })}\r\n          </DropdownButton>\r\n        </Nav.Item>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n\r\n// const SideBar = () => {\r\n//   return (\r\n\r\n//     // <div className=\"container\">\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"fas fa-portrait fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">Mostafa Ali</div>\r\n//     //   </div>\r\n\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"far fa-sun fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">MY Day</div>\r\n//     //   </div>\r\n\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"fas fa-clipboard-list fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">UnDone Items</div>\r\n//     //   </div>\r\n\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"fas fa-clipboard-check fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">Done Items</div>\r\n//     //   </div>\r\n//     // </div>\r\n//   );\r\n// };\r\n\r\n// export default SideBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ItemRen extends Component {\r\n  state = {};\r\n\r\n  getIconClasses() {\r\n    return this.props.item.done\r\n      ? \"fas fa-check-circle fa-2x\"\r\n      : \"far fa-circle fa-2x\";\r\n  }\r\n\r\n  getText() {\r\n    return this.props.item.done ? (\r\n      <h5 className=\"text-muted\">\r\n        <del>{this.props.item.name}</del>\r\n      </h5>\r\n    ) : (\r\n      <h5>{this.props.item.name}</h5>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { item, isDone, Del } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row \">\r\n          {/* Check Icon */}\r\n          <div className=\"col-1 d-flex align-items-center \">\r\n            <i\r\n              className={this.getIconClasses()}\r\n              onClick={() => isDone(this.props.item)}\r\n              style={\r\n                item.done\r\n                  ? { color: \"green\", cursor: \"pointer\" }\r\n                  : { cursor: \"pointer\" }\r\n              }\r\n            ></i>\r\n          </div>\r\n          {/* Card Text */}\r\n          <div className=\"col-8\">\r\n            <div className=\"row\">{this.getText()}</div>\r\n            <div className=\"row text-muted\">{item.type}</div>\r\n          </div>\r\n          {/* Delete Icon */}\r\n          <div className=\"col d-flex align-items-center justify-content-end text-danger\">\r\n            <i\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => Del(this.props.item)}\r\n              className=\"far fa-trash-alt fa-2x\"\r\n            ></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"dropdown-divider\"></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRen;\r\n","import React, { Component } from \"react\";\r\n//import axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  input,\r\n  FormGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nclass AddNew extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      newItem: \"\",\r\n      newCat: \"\",\r\n    };\r\n  }\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //ADD\r\n    //Call Backend\r\n    const obj = {\r\n      done: false,\r\n      name: this.state.newItem,\r\n      type: this.state.newCat,\r\n      id: this.props.list.length + 1,\r\n    };\r\n    this.props.AddHandle(obj);\r\n\r\n    this.setState({ newItem: \"\", newCat: \"\" });\r\n    // if (obj.name !== \"\" && obj.type !== \"\") {\r\n    //   await axios.post(\"http://localhost:3000/list/\", obj);\r\n    //   this.props.toggleModal();\r\n    //   window.location.reload(false);\r\n    // }\r\n  };\r\n\r\n  handleAddState = (e) => {\r\n    //Clone\r\n    let state = { ...this.state };\r\n    //Edit\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    //Set state\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        id=\"modal\"\r\n        isOpen={this.props.isModalOpen}\r\n        toggle={this.props.toggleModal}\r\n      >\r\n        <ModalHeader toggle={this.toggleModal}>Add New Item ToDo</ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label>ToDo Name</Label>\r\n              <input\r\n                name=\"newItem\"\r\n                className=\"form-control\"\r\n                onChange={this.handleAddState}\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                value={this.state.newItem}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>ToDo Category</Label>\r\n              <input\r\n                name=\"newCat\"\r\n                className=\"form-control\"\r\n                onChange={this.handleAddState}\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                value={this.state.newCat}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-center\">\r\n              <Button\r\n                className=\"mr-2\"\r\n                type=\"submit\"\r\n                value=\"submit\"\r\n                color=\"danger\"\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.props.toggleModal}\r\n              >\r\n                Close\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNew;\r\n","import React, { Component } from \"react\";\r\nimport ItemRen from \"./item\";\r\nimport AddNew from \"./AddNew\";\r\n\r\n//import \"../css/card.css\";\r\n//import Delete from \"./Delete\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card todo-item\">\r\n          {/* ----------------------Add New || Delete All----------------------------- */}\r\n          <div className=\"card-header \">\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-9 d-flex align-items-center text-primary\"\r\n                onClick={() => this.props.toggleModal()}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-plus fa-2x mr-3\"></i>\r\n                <h5>Add New-to-do</h5>\r\n\r\n                <AddNew\r\n                  isModalOpen={this.props.isModalOpen}\r\n                  toggleModal={this.props.toggleModal}\r\n                  list={this.props.list}\r\n                  AddHandle={this.props.Add}\r\n                />\r\n              </div>\r\n              {/* Delete All */}\r\n              <div\r\n                className=\"col d-flex align-items-center justify-content-end text-danger\"\r\n                onClick={() => this.props.DelAll()}\r\n                //onClick={() => this.props.toggleModal()}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <h5>Delete All</h5>\r\n                <i className=\"far fa-trash-alt fa-2x ml-3\"></i>\r\n                {/* <Delete\r\n                  isModalOpen={this.props.isModalOpen}\r\n                  toggleModal={this.props.toggleModal}\r\n                  DelAll={this.props.DelAll}\r\n                /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ----------------------Render list----------------------------- */}\r\n          <div className=\"card-body\">\r\n            {this.props.list.map((item) => {\r\n              /* Categories */\r\n              if (this.props.SelectedCat !== \"\") {\r\n                if (item.type === this.props.SelectedCat) {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ItemRen\r\n                        item={item}\r\n                        isDone={this.props.isDone}\r\n                        Del={this.props.Del}\r\n                        DelAll={this.props.DelAll}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else if (this.props.ShowUnDone) {\r\n                /* UnDone */\r\n                if (!item.done) {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ItemRen\r\n                        item={item}\r\n                        isDone={this.props.isDone}\r\n                        Del={this.props.Del}\r\n                        DelAll={this.props.DelAll}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else if (this.props.ShowDone) {\r\n                /* Show Done */\r\n                if (item.done) {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ItemRen\r\n                        item={item}\r\n                        isDone={this.props.isDone}\r\n                        Del={this.props.Del}\r\n                        DelAll={this.props.DelAll}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else {\r\n                /* Show All */\r\n                return (\r\n                  <div key={item.id}>\r\n                    <ItemRen\r\n                      item={item}\r\n                      isDone={this.props.isDone}\r\n                      Del={this.props.Del}\r\n                      DelAll={this.props.DelAll}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          {/* Add New */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./navbar\";\r\nimport SideBar from \"./sidebar\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n//import axios from \"axios\";\r\n//import { toast } from \"react-toastify\";\r\n\r\nimport Home from \"./home\";\r\n\r\nimport \"../css/sidebar.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.ShowDoneItems = this.ShowDoneItems.bind(this);\r\n    this.ShowUnDoneItems = this.ShowUnDoneItems.bind(this);\r\n    this.ShowAll = this.ShowAll.bind(this);\r\n    this.ShowCat = this.ShowCat.bind(this);\r\n\r\n    this.state = {\r\n      list: [\r\n        { done: false, name: \"Buy Bannana\", type: \"Groceries\", id: 1 },\r\n        { done: false, name: \"Buy vegetables\", type: \"Groceries\", id: 2 },\r\n        { done: false, name: \"Buy books\", type: \"Bookshop\", id: 3 },\r\n        {\r\n          done: false,\r\n          name: \"Check tech prices\",\r\n          type: \"Internet surfing\",\r\n          id: 4,\r\n        },\r\n      ],\r\n      isModalOpen: false,\r\n      ShowDone: false,\r\n      ShowUnDone: false,\r\n      SelectedCat: \"\",\r\n    };\r\n  }\r\n\r\n  // async componentDidMount() {\r\n  //   //Call Backend\r\n  //   let { data } = await axios.get(\"http://localhost:3000/list\");\r\n  //   console.log(data);\r\n  //   //Set State\r\n  //   this.setState({ list: data });\r\n  // }\r\n\r\n  // state = {\r\n  //   list: [\r\n  //     { done: true, name: \"Buy Bannana\", type: \"Groceries\", id: 1 },\r\n  //     { done: true, name: \"Buy vegetables\", type: \"Groceries\", id: 2 },\r\n  //     { done: true, name: \"Buy books\", type: \"Bookshop\", id: 3 },\r\n  //     { done: true, name: \"Check tech prices\", type: \"Internet surfing\", id: 4 },\r\n  //     { done: true, name: \"Calling mom\", type: \"PhoneCall\", id: 5 },\r\n  //   ],\r\n  //   isModalOpen: false,\r\n  //   ShowDone: false,\r\n  //   ShowUnDone: false,\r\n  //   SelectedCat: \"\",\r\n  // };\r\n  handleAdd = (item) => {\r\n    //Clone\r\n    let list = [...this.state.list];\r\n    //Edit\r\n    list.push(item);\r\n    console.log(list);\r\n    //Set state\r\n    this.setState({ list });\r\n    this.toggleModal();\r\n  };\r\n\r\n  handleInDone = async (item) => {\r\n    //Clone\r\n    const list = [...this.state.list];\r\n    const index = list.indexOf(item);\r\n    list[index] = { ...list[index] };\r\n    //Edit\r\n    list[index].done = !list[index].done;\r\n    //Set State\r\n    this.setState({ list });\r\n    /////////////////////////////////////////////////////\r\n    //console.log(list[index].id);\r\n    //Delete ID\r\n    //delete list[index].id;\r\n\r\n    // await axios.put(\r\n    //   \"http://localhost:3000/list/\" + list[index].id,\r\n    //   list[index]\r\n    // );\r\n  };\r\n\r\n  handleDelete = async (item) => {\r\n    //Clone\r\n    //const oldList = [...this.state.list];\r\n    const list = this.state.list.filter((i) => i.id !== item.id);\r\n    this.setState({ list });\r\n    // try {\r\n    //   //Call B\r\n    //   await axios.delete(\"http://localhost:3000/list/\" + item.id);\r\n    // } catch (ex) {\r\n    //   toast(\"Cant Delete\");\r\n    //   this.setState({ list: oldList });\r\n    // }\r\n  };\r\n\r\n  DeleteAll = async () => {\r\n    //const oldList = [...this.state.list];\r\n    //let i;\r\n\r\n    // -------------- Delete Done items\r\n    if (this.state.ShowDone) {\r\n      const list = this.state.list.filter((item) => item.done === false);\r\n      //console.log(oldList[0]);\r\n      this.setState({ list });\r\n      // for (i = 1; i < oldList.length + 1; i++) {\r\n      //   try {\r\n      //     if (oldList[i - 1].done) {\r\n      //       await axios.delete(\"http://localhost:3000/list/\" + i);\r\n      //     } else {\r\n      //       continue;\r\n      //     }\r\n      //   } catch (ex) {\r\n      //     toast(\"Cant Delete\");\r\n      //     this.setState({ list: oldList });\r\n      //   }\r\n      // }\r\n      // window.location.reload(false);\r\n    }\r\n    // -------------- Delete UnDone items\r\n    else if (this.state.ShowUnDone) {\r\n      const list = this.state.list.filter((item) => item.done === true);\r\n      //console.log(oldList[0]);\r\n      this.setState({ list });\r\n      // for (i = 1; i < oldList.length + 1; i++) {\r\n      //   try {\r\n      //     if (oldList[i - 1].done === false) {\r\n      //       await axios.delete(\"http://localhost:3000/list/\" + i);\r\n      //     } else {\r\n      //       continue;\r\n      //     }\r\n      //   } catch (ex) {\r\n      //     toast(\"Cant Delete\");\r\n      //     this.setState({ list: oldList });\r\n      //   }\r\n      // }\r\n      // window.location.reload(false);\r\n    }\r\n    // -------------- Delete Category items\r\n    else if (this.state.SelectedCat !== \"\") {\r\n      const list = this.state.list.filter(\r\n        (item) => item.type !== this.state.SelectedCat\r\n      );\r\n      //console.log(oldList[0]);\r\n      this.setState({ list });\r\n      // for (i = 1; i < oldList.length + 1; i++) {\r\n      //   try {\r\n      //     if (oldList[i - 1].type === this.state.SelectedCat) {\r\n      //       await axios.delete(\"http://localhost:3000/list/\" + i);\r\n      //     } else {\r\n      //       continue;\r\n      //     }\r\n      //   } catch (ex) {\r\n      //     toast(\"Cant Delete\");\r\n      //     this.setState({ list: oldList });\r\n      //   }\r\n      // }\r\n      // window.location.reload(false);\r\n    }\r\n    // -------------- Delete All items\r\n    else {\r\n      const list = [];\r\n      this.setState({ list });\r\n      // for (i = 0; i < oldList.length + 1; i++) {\r\n      //   try {\r\n      //     await axios.delete(\"http://localhost:3000/list/\" + i);\r\n      //   } catch (ex) {\r\n      //     toast(\"Cant Delete\");\r\n      //     this.setState({ list: oldList });\r\n      //   }\r\n      // }\r\n      // window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  ShowDoneItems() {\r\n    this.setState({\r\n      ShowDone: true,\r\n      ShowUnDone: false,\r\n      SelectedCat: \"\",\r\n    });\r\n  }\r\n\r\n  ShowUnDoneItems() {\r\n    this.setState({\r\n      ShowUnDone: true,\r\n      ShowDone: false,\r\n      SelectedCat: \"\",\r\n    });\r\n  }\r\n\r\n  ShowAll() {\r\n    this.setState({\r\n      ShowUnDone: false,\r\n      ShowDone: false,\r\n      SelectedCat: \"\",\r\n    });\r\n  }\r\n\r\n  ShowCat(c) {\r\n    //console.log(\"sended \" + c);\r\n    //console.log(this.state.SelectedCat);\r\n    this.setState({\r\n      ShowUnDone: false,\r\n      ShowDone: false,\r\n      SelectedCat: c,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //let lastId = this.state.list[this.state.list.length - 1].id + 1;\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n\r\n        <div className=\"main\">\r\n          <div className=\"row\">\r\n            {\r\n              <div className=\"col-2 \">\r\n                <SideBar\r\n                  list={this.state.list}\r\n                  ShowDoneItems={this.ShowDoneItems}\r\n                  ShowUnDoneItems={this.ShowUnDoneItems}\r\n                  ShowAll={this.ShowAll}\r\n                  ShowCat={this.ShowCat}\r\n                />\r\n              </div>\r\n            }\r\n            <div className=\"col \">\r\n              <Switch>\r\n                <Route\r\n                  path=\"/Todo-App/\"\r\n                  render={() => (\r\n                    <Home\r\n                      list={this.state.list}\r\n                      isDone={this.handleInDone}\r\n                      Del={this.handleDelete}\r\n                      DelAll={this.DeleteAll}\r\n                      isModalOpen={this.state.isModalOpen}\r\n                      toggleModal={this.toggleModal}\r\n                      ShowDone={this.state.ShowDone}\r\n                      ShowUnDone={this.state.ShowUnDone}\r\n                      SelectedCat={this.state.SelectedCat}\r\n                      Add={this.handleAdd}\r\n                      lastItemId={this.props.lastItemId}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect from=\"/\" to=\"/Todo-App/\" />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./component/app\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}