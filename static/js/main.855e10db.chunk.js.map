{"version":3,"sources":["reportWebVitals.js","component/navbar.jsx","component/sidebar.jsx","component/item.jsx","component/AddNew.jsx","component/home.jsx","component/app.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","date","React","useState","Date","today","day","toLocaleDateString","weekday","getDate","month","useDate","className","href","id","Component","ItemRen","state","this","props","item","done","name","isDone","Del","Fragment","getIconClasses","onClick","style","color","cursor","getText","type","AddNew","handleSubmit","e","a","preventDefault","obj","newItem","newCat","axios","post","toggleModal","window","location","reload","handleAdd","currentTarget","value","setState","Modal","isOpen","isModalOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","onChange","placeholder","Button","Home","DelAll","list","map","SelectedCat","ShowUnDone","ShowDone","App","handleInDone","index","indexOf","put","handleDelete","oldList","filter","i","delete","toast","DeleteAll","length","bind","ShowDoneItems","ShowUnDoneItems","ShowAll","ShowCat","get","data","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.855e10db.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nexport const useDate = () => {\r\n  const locale = \"en\";\r\n  const [today] = React.useState(new Date()); // Save the current date to be able to trigger an update\r\n\r\n  const day = today.toLocaleDateString(locale, { weekday: \"long\" });\r\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\r\n    month: \"long\",\r\n  })}\\n\\n`;\r\n\r\n  return {\r\n    date,\r\n  };\r\n};\r\n\r\nconst NavBar = () => {\r\n  const { date } = useDate();\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        ToDo App\r\n      </a>\r\n      {/* <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button> */}\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" href=\"/\">\r\n              {date}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport \"react-sidebar-ui/dist/index.css\";\r\nimport { Nav, NavDropdown, DropdownButton } from \"react-bootstrap\";\r\n\r\nimport \"../css/sidebar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = { cat: [] };\r\n\r\n  newCat(c) {\r\n    //Clone\r\n    let cat = { ...this.state.cat };\r\n    //Edit\r\n    cat = cat + c;\r\n    //Set state\r\n    this.setState({ cat });\r\n  }\r\n\r\n  render() {\r\n    let x = [];\r\n    const dropTitle = (\r\n      <span>\r\n        <i className=\"fas fa-list fa-lg\"> Categories</i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Nav\r\n        className=\"col-md-12 d-none d-md-block bg-dark sidebar\"\r\n        activeKey=\"/home\"\r\n      >\r\n        <div className=\"sidebar-sticky\"></div>\r\n        <Nav.Item>\r\n          <Nav.Link className=\"nLink\" href=\"/home\" onClick={this.props.ShowAll}>\r\n            <i className=\"fas fa-home mr-2\" />\r\n            Home\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className=\"nLink\"\r\n            href=\"#\"\r\n            onClick={this.props.ShowUnDoneItems}\r\n          >\r\n            <i className=\"fas fa-clipboard-list fa-lg mr-2\" />\r\n            UnDone Items\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            className=\"nLink\"\r\n            href=\"#\"\r\n            onClick={this.props.ShowDoneItems}\r\n          >\r\n            <i className=\"fas fa-clipboard-check fa-lg mr-2\" />\r\n            Done Items\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        {/* <Nav.Item>\r\n          <Nav.Link className=\"nLink disabled\" href=\"#\">\r\n            <i className=\"fas fa-list fa-lg mr-2\" />\r\n            Categories\r\n          </Nav.Link>\r\n          <ul>\r\n            {this.props.list.map((item) => {\r\n              let c = 0;\r\n              //console.log(x);\r\n              for (let i = 0; i < x.length; i++) {\r\n                if (x[i] == item.type) {\r\n                  c++;\r\n                  break;\r\n                }\r\n              }\r\n              if (c == 0) {\r\n                x.push(item.type);\r\n                return (\r\n                  <Nav.Link className=\"nLink\" key={item.id}>\r\n                    <li>{item.type}</li>\r\n                  </Nav.Link>\r\n                );\r\n              } else {\r\n                //.log(\"found\" + item.type);\r\n              }\r\n            })}\r\n          </ul>\r\n        </Nav.Item> */}\r\n\r\n        <br />\r\n\r\n        <Nav.Item className=\"ml-2\">\r\n          <DropdownButton title={dropTitle} id=\"collasible-nav-dropdown\">\r\n\r\n            {this.props.list.map((item) => {\r\n\t\t\t\t\r\n              let c = 0;\r\n              //console.log(x);\r\n              for (let i = 0; i < x.length; i++) {\r\n                if (x[i] === item.type) {\r\n                  c++;\r\n                  break;\r\n                }\r\n              }\r\n              if (c === 0) {\r\n                x.push(item.type);\r\n                return (\r\n                  <NavDropdown.Item\r\n                    key={item.id}\r\n                    onClick={() => this.props.ShowCat(item.type)}\r\n                  >\r\n                    {\" \"}\r\n                    {item.type}{\" \"}\r\n                  </NavDropdown.Item>\r\n                );\r\n              } else {\r\n                //console.log(\"found\" + item.type);\r\n\t\t\t\t \r\n                return;\r\n              }\r\n            })}\r\n          </DropdownButton>\r\n        </Nav.Item>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n\r\n// const SideBar = () => {\r\n//   return (\r\n\r\n//     // <div className=\"container\">\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"fas fa-portrait fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">Mostafa Ali</div>\r\n//     //   </div>\r\n\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"far fa-sun fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">MY Day</div>\r\n//     //   </div>\r\n\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"fas fa-clipboard-list fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">UnDone Items</div>\r\n//     //   </div>\r\n\r\n//     //   <br />\r\n//     //   <div className=\"row\">\r\n//     //     <div className=\"col-1\">\r\n//     //       <i className=\"fas fa-clipboard-check fa-lg\"></i>\r\n//     //     </div>\r\n//     //     <div className=\"col \">Done Items</div>\r\n//     //   </div>\r\n//     // </div>\r\n//   );\r\n// };\r\n\r\n// export default SideBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ItemRen extends Component {\r\n  state = {};\r\n\r\n  getIconClasses() {\r\n    return this.props.item.done\r\n      ? \"fas fa-check-circle fa-2x\"\r\n      : \"far fa-circle fa-2x\";\r\n  }\r\n\r\n  getText() {\r\n    return this.props.item.done ? (\r\n      <h5 className=\"text-muted\">\r\n        <del>{this.props.item.name}</del>\r\n      </h5>\r\n    ) : (\r\n      <h5>{this.props.item.name}</h5>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { item, isDone, Del } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row \">\r\n          {/* Check Icon */}\r\n          <div className=\"col-1 d-flex align-items-center \">\r\n            <i\r\n              className={this.getIconClasses()}\r\n              onClick={() => isDone(this.props.item)}\r\n              style={\r\n                item.done\r\n                  ? { color: \"green\", cursor: \"pointer\" }\r\n                  : { cursor: \"pointer\" }\r\n              }\r\n            ></i>\r\n          </div>\r\n          {/* Card Text */}\r\n          <div className=\"col-8\">\r\n            <div className=\"row\">{this.getText()}</div>\r\n            <div className=\"row text-muted\">{item.type}</div>\r\n          </div>\r\n          {/* Delete Icon */}\r\n          <div className=\"col d-flex align-items-center justify-content-end text-danger\">\r\n            <i\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => Del(this.props.item)}\r\n              className=\"far fa-trash-alt fa-2x\"\r\n            ></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"dropdown-divider\"></div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemRen;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  input,\r\n  FormGroup,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nclass AddNew extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      newItem: \"\",\r\n      newCat: \"\",\r\n    };\r\n  }\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //ADD\r\n    //Call Backend\r\n    const obj = {\r\n      done: false,\r\n      name: this.state.newItem,\r\n      type: this.state.newCat,\r\n    };\r\n    if (obj.name !== \"\" && obj.type !== \"\") {\r\n      await axios.post(\"http://localhost:3000/list/\", obj);\r\n      this.props.toggleModal();\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  handleAdd = (e) => {\r\n    //Clone\r\n    let state = { ...this.state };\r\n    //Edit\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    //Set state\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        id=\"modal\"\r\n        isOpen={this.props.isModalOpen}\r\n        toggle={this.props.toggleModal}\r\n      >\r\n        <ModalHeader toggle={this.toggleModal}>Add New Item ToDo</ModalHeader>\r\n        <ModalBody>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label>ToDo Name</Label>\r\n              <input\r\n                name=\"newItem\"\r\n                className=\"form-control\"\r\n                onChange={this.handleAdd}\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                value={this.state.newItem}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label>ToDo Category</Label>\r\n              <input\r\n                name=\"newCat\"\r\n                className=\"form-control\"\r\n                onChange={this.handleAdd}\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                value={this.state.newCat}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-center\">\r\n              <Button\r\n                className=\"mr-2\"\r\n                type=\"submit\"\r\n                value=\"submit\"\r\n                color=\"danger\"\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.props.toggleModal}\r\n              >\r\n                Close\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNew;\r\n","import React, { Component } from \"react\";\r\nimport ItemRen from \"./item\";\r\nimport AddNew from \"./AddNew\";\r\n\r\n//import \"../css/card.css\";\r\n//import Delete from \"./Delete\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card todo-item\">\r\n          {/* ----------------------Add New || Delete All----------------------------- */}\r\n          <div className=\"card-header \">\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-9 d-flex align-items-center text-primary\"\r\n                onClick={() => this.props.toggleModal()}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-plus fa-2x mr-3\"></i>\r\n                <h5>Add New-to-do</h5>\r\n\r\n                <AddNew\r\n                  isModalOpen={this.props.isModalOpen}\r\n                  toggleModal={this.props.toggleModal}\r\n                />\r\n              </div>\r\n              {/* Delete All */}\r\n              <div\r\n                className=\"col d-flex align-items-center justify-content-end text-danger\"\r\n                onClick={() => this.props.DelAll()}\r\n                //onClick={() => this.props.toggleModal()}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <h5>Delete All</h5>\r\n                <i className=\"far fa-trash-alt fa-2x ml-3\"></i>\r\n                {/* <Delete\r\n                  isModalOpen={this.props.isModalOpen}\r\n                  toggleModal={this.props.toggleModal}\r\n                  DelAll={this.props.DelAll}\r\n                /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* ----------------------Render list----------------------------- */}\r\n          <div className=\"card-body\">\r\n\t\t   \r\n            {this.props.list.map((item) => {\r\n\t\t\t\t\r\n              /* Categories */\r\n              if (this.props.SelectedCat !== \"\") {\r\n                if (item.type === this.props.SelectedCat) {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ItemRen\r\n                        item={item}\r\n                        isDone={this.props.isDone}\r\n                        Del={this.props.Del}\r\n                        DelAll={this.props.DelAll}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else if (this.props.ShowUnDone) {\r\n                /* UnDone */\r\n                if (!item.done) {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ItemRen\r\n                        item={item}\r\n                        isDone={this.props.isDone}\r\n                        Del={this.props.Del}\r\n                        DelAll={this.props.DelAll}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else if (this.props.ShowDone) {\r\n                /* Show Done */\r\n                if (item.done) {\r\n                  return (\r\n                    <div key={item.id}>\r\n                      <ItemRen\r\n                        item={item}\r\n                        isDone={this.props.isDone}\r\n                        Del={this.props.Del}\r\n                        DelAll={this.props.DelAll}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else {\r\n                /* Show All */\r\n                return (\r\n                  <div key={item.id}>\r\n                    <ItemRen\r\n                      item={item}\r\n                      isDone={this.props.isDone}\r\n                      Del={this.props.Del}\r\n                      DelAll={this.props.DelAll}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n          {/* Add New */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./navbar\";\r\nimport SideBar from \"./sidebar\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport Home from \"./home\";\r\n\r\nimport \"../css/sidebar.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.ShowDoneItems = this.ShowDoneItems.bind(this);\r\n    this.ShowUnDoneItems = this.ShowUnDoneItems.bind(this);\r\n    this.ShowAll = this.ShowAll.bind(this);\r\n    this.ShowCat = this.ShowCat.bind(this);\r\n\r\n    this.state = {\r\n      list: [],\r\n      isModalOpen: false,\r\n      ShowDone: false,\r\n      ShowUnDone: false,\r\n      SelectedCat: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //Call Backend\r\n    let { data } = await axios.get(\"http://localhost:3000/list\");\r\n\r\n    //Set State\r\n    this.setState({ list: data });\r\n  }\r\n\r\n  // state = {\r\n  //   list: [\r\n  //     { done: true, name: \"Buy Bannana\", type: \"Groceries\" },\r\n  //     { done: true, name: \"Buy vegetables\", type: \"Groceries\" },\r\n  //     { done: true, name: \"Buy books\", type: \"Bookshop\" },\r\n  //     { done: true, name: \"Check tech prices\", type: \"Internet surfing\" },\r\n  //     { done: true, name: \"Calling mom\", type: \"PhoneCall\" },\r\n  //   ],\r\n  //   isModalOpen: false,\r\n  //   ShowDone: false,\r\n  //   ShowUnDone: false,\r\n  //   SelectedCat: \"\",\r\n  // };\r\n\r\n  handleInDone = async (item) => {\r\n    //Clone\r\n    const list = [...this.state.list];\r\n    const index = list.indexOf(item);\r\n    list[index] = { ...list[index] };\r\n    //Edit\r\n    list[index].done = !list[index].done;\r\n    //Set State\r\n    this.setState({ list });\r\n    /////////////////////////////////////////////////////\r\n    //console.log(list[index].id);\r\n    //Delete ID\r\n    //delete list[index].id;\r\n\r\n    await axios.put(\r\n      \"http://localhost:3000/list/\" + list[index].id,\r\n      list[index]\r\n    );\r\n  };\r\n\r\n  handleDelete = async (item) => {\r\n    //Clone\r\n    const oldList = [...this.state.list];\r\n    const list = this.state.list.filter((i) => i.id !== item.id);\r\n    this.setState({ list });\r\n    try {\r\n      //Call B\r\n      await axios.delete(\"http://localhost:3000/list/\" + item.id);\r\n    } catch (ex) {\r\n      toast(\"Cant Delete\");\r\n      this.setState({ list: oldList });\r\n    }\r\n  };\r\n\r\n  DeleteAll = async () => {\r\n    const oldList = [...this.state.list];\r\n    let i;\r\n\r\n    // -------------- Delete Done items\r\n    if (this.state.ShowDone) {\r\n      const list = this.state.list.filter((item) => item.done === false);\r\n      //console.log(oldList[0]);\r\n      this.setState({ list });\r\n      for (i = 1; i < oldList.length + 1; i++) {\r\n        try {\r\n          if (oldList[i - 1].done) {\r\n            await axios.delete(\"http://localhost:3000/list/\" + i);\r\n          } else {\r\n            continue;\r\n          }\r\n        } catch (ex) {\r\n          toast(\"Cant Delete\");\r\n          this.setState({ list: oldList });\r\n        }\r\n      }\r\n      window.location.reload(false);\r\n    }\r\n    // -------------- Delete UnDone items\r\n    else if (this.state.ShowUnDone) {\r\n      const list = this.state.list.filter((item) => item.done === true);\r\n      //console.log(oldList[0]);\r\n      this.setState({ list });\r\n      for (i = 1; i < oldList.length + 1; i++) {\r\n        try {\r\n          if (oldList[i - 1].done === false) {\r\n            await axios.delete(\"http://localhost:3000/list/\" + i);\r\n          } else {\r\n            continue;\r\n          }\r\n        } catch (ex) {\r\n          toast(\"Cant Delete\");\r\n          this.setState({ list: oldList });\r\n        }\r\n      }\r\n      window.location.reload(false);\r\n    }\r\n    // -------------- Delete Category items\r\n    else if (this.state.SelectedCat !== \"\") {\r\n      const list = this.state.list.filter(\r\n        (item) => item.type !== this.state.SelectedCat\r\n      );\r\n      //console.log(oldList[0]);\r\n      this.setState({ list });\r\n      for (i = 1; i < oldList.length + 1; i++) {\r\n        try {\r\n          if (oldList[i - 1].type === this.state.SelectedCat) {\r\n            await axios.delete(\"http://localhost:3000/list/\" + i);\r\n          } else {\r\n            continue;\r\n          }\r\n        } catch (ex) {\r\n          toast(\"Cant Delete\");\r\n          this.setState({ list: oldList });\r\n        }\r\n      }\r\n      window.location.reload(false);\r\n    }\r\n    // -------------- Delete All items\r\n    else {\r\n      const list = [];\r\n      this.setState({ list });\r\n      for (i = 0; i < oldList.length + 1; i++) {\r\n        try {\r\n          await axios.delete(\"http://localhost:3000/list/\" + i);\r\n        } catch (ex) {\r\n          toast(\"Cant Delete\");\r\n          this.setState({ list: oldList });\r\n        }\r\n      }\r\n      window.location.reload(false);\r\n    }\r\n  };\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  ShowDoneItems() {\r\n    this.setState({\r\n      ShowDone: true,\r\n      ShowUnDone: false,\r\n      SelectedCat: \"\",\r\n    });\r\n  }\r\n\r\n  ShowUnDoneItems() {\r\n    this.setState({\r\n      ShowUnDone: true,\r\n      ShowDone: false,\r\n      SelectedCat: \"\",\r\n    });\r\n  }\r\n\r\n  ShowAll() {\r\n    this.setState({\r\n      ShowUnDone: false,\r\n      ShowDone: false,\r\n      SelectedCat: \"\",\r\n    });\r\n  }\r\n\r\n  ShowCat(c) {\r\n    //console.log(\"sended \" + c);\r\n    //console.log(this.state.SelectedCat);\r\n    this.setState({\r\n      ShowUnDone: false,\r\n      ShowDone: false,\r\n      SelectedCat: c,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n\r\n        <div className=\"main\">\r\n          <div className=\"row\">\r\n            {/* <div className=\"col-2 \">\r\n              <SideBar\r\n                list={this.state.list}\r\n                ShowDoneItems={this.ShowDoneItems}\r\n                ShowUnDoneItems={this.ShowUnDoneItems}\r\n                ShowAll={this.ShowAll}\r\n                ShowCat={this.ShowCat}\r\n              />\r\n            </div> */}\r\n            <div className=\"col \">\r\n              {/* <Switch>\r\n                <Route\r\n                  path=\"/home\"\r\n                  render={() => ( */}\r\n              <Home\r\n                list={this.state.list}\r\n                isDone={this.handleInDone}\r\n                Del={this.handleDelete}\r\n                DelAll={this.DeleteAll}\r\n                isModalOpen={this.state.isModalOpen}\r\n                toggleModal={this.toggleModal}\r\n                ShowDone={this.state.ShowDone}\r\n                ShowUnDone={this.state.ShowUnDone}\r\n                SelectedCat={this.state.SelectedCat}\r\n              />\r\n              {/* )}\r\n                />\r\n                <Redirect from=\"/\" to=\"/home\" />\r\n              </Switch> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./component/app\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}